#include "stdafx.h"
#include <iostream>
#include <math.h>
#include <iomanip>
#include <fstream> 
#include <stdio.h>
#include <cstdlib>
#include <vector>

using namespace std;
float PI = 3.14159265358979323846;
//поверхность контактов(A)
float ContactSurf(int r, float R0) {
	return 4 * PI*(r + R0);
}
//число ячеек в слое L
float NumbCell(int r, float R0) {
	return 4 / 3 * PI*(3 * pow((r + R0), 2) - 3 * (r + R0) + 1);
}

void probability(float* LambdB, float* LambdF, float* LambdS,int curru,float R0) {
	float tempLambdB, tempLambdF, tempLambdS;
	tempLambdB = tempLambdF = 1 / 6;
	tempLambdS = 1 - tempLambdB - tempLambdF;//вероятности перехода в плойской геометрии
	*LambdF = tempLambdF*(ContactSurf(curru,R0) / NumbCell(curru,R0));
	*LambdB = tempLambdB*(ContactSurf(curru-1, R0) / NumbCell(curru, R0));
	*LambdS = 1 - *LambdF -*LambdB;
}

void field(int numblink,int M,int N,float R0,int max_step) {
	float LambdB, LambdF, LambdS;//вероятности перехода в сферической геометрии
	int curru=0, currs=1;
	vector<int> u;
	vector<int> s;
	u.resize(M + 2);
	s.resize(N);
	for (int i = 0; i < M + 2; i++)
		u[i] = 0;
	for (int i = 0; i < N; i++)
		s[i] = 0;
	for (int i = 0; i < max_step; i++) {

	}
}





int main()
{
	//setlocale(LC_ALL, "Russian");
	int N, n, M, v, max_step, numblink;
	float del = 0.1, R0 = 0.5;
	ifstream infile("data1.txt");
	infile >> N >> n >> M >> v >> del >> max_step;//нач. парамертры
	infile.close();
	numblink = n*N;//число звеньев
	vector<int> cell1;
	vector<int> cell2;
	cell1.resize(M + 2);
	cell2.resize(N);

	return 0;
}
